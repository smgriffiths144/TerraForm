# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs terraform init
      - name: Run terraform init
        if: always()
        run: terraform init
        
      # Runs terraform apply
      - name: Run terraform apply
        if: always()
        #run: terraform apply --auto-approve
        run: echo moving to GH hosted MacOS runner

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        if: always()
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  Run-PSScriptAnalyzer-on-Windows:
    name: Run PSScriptAnalyzer on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PSScriptAnalyzer module
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
      - name: Get list of rules
        shell: pwsh
        run: |
          Get-ScriptAnalyzerRule
  Run-on-MacOS:
    name: test on MacOS
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install Terraform
        run: |
            brew tap hashicorp/tap
            brew install hashicorp/tap/terraform
      - name: Test Terraform
        run: |
            terraform --version
            echo testing123
            echo $AWS_ACCESS_KEY_ID
            echo $AWS_DEFAULT_REGION
            terraform init
            terraform plan
            terraform apply --auto-approve
  commitMessage:
    name: test commit message
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.isSmoke.outputs.test }}
    steps:
      - id: isSmoke
        if: ${{ contains(github.event.head_commit.message, 'smoke_test') }}
        run: echo "test=true" >> $GITHUB_OUTPUT
      
      - id: optionalStep
        if: ${{ steps.isSmoke.outputs.test  == 'true' }}
        run: echo it was a smoke test